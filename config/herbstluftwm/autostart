#!/usr/bin/env bash
# This was taken from DT (took it from https://forums.bunsenlabs.org/viewtopic.php?id=3621)
# Modified by @isinyaaa

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'
$HOME/.fehbg &

# Uncomment the following lines to use xmobar as the panel
# Remember to comment out the last 8 lines of this config, so that
# polybar will no longer launch on startup.
# $HOME/.config/herbstluftwm/xmobar

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4                # Use the super key as the main modifier
myTerm=kitty		# Set my preferred terminal
myEditor="nvim"		# Set my preferred editor

hc keybind $Mod-Shift-x quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
hc keybind $Mod-Return spawn $myTerm
hc keybind $Mod-e spawn $myTerm --class editor -e $myEditor
hc keybind $Mod-Shift-Return spawn $myTerm --class floating-term

hc keybind $Mod-d spawn rofi -matching fuzzy -show combi

hc keybind $Mod-Control-b spawn bluetoothctl connect 94:DB:56:EA:A2:5A
hc keybind $Mod-Control-Shift-b spawn bluetoothctl disconnect 94:DB:56:EA:A2:5A

# Screenshots

screenshots_script="$HOME/.config/herbstluftwm/scripts/screenshots.sh"

hc keybind Print spawn $screenshots_script
hc keybind $Mod-Shift-Print spawn $screenshots_script select

# Quick monitor setup

xrandr_script="$HOME/.config/herbstluftwm/scripts/xrandr.sh"
hc keybind $Mod-Control-m spawn $xrandr_script 1
hc keybind $Mod-Shift-m spawn $xrandr_script 2
hc keybind $Mod-Control-Shift-m spawn $xrandr_script 3

# My dmenu scripts (Alt+Ctrl+Key)
#hc keybind Mod1-Control-e spawn ./.dmenu/dmenu-edit-configs.sh
#hc keybind Mod1-Control-m spawn ./.dmenu/dmenu-sysmon.sh
#hc keybind Mod1-Control-p spawn passmenu
#hc keybind Mod1-Control-s spawn ./.dmenu/dmenu-surfraw.sh
#hc keybind Mod1-Control-t spawn ./.dmenu/dmenu-trading.sh

# My applications (Super+Alt+Key)
hc keybind $Mod-Shift-f spawn $myTerm --class files -e ranger
hc keybind $Mod-Shift-b spawn brave
hc keybind $Mod-Shift-s spawn $myTerm --class player -e ncspot

# focusing clients
hc keybind $Mod-Left          focus left
hc keybind $Mod-Down          focus down
hc keybind $Mod-Up            focus up
hc keybind $Mod-Right         focus right
hc keybind $Mod-h             focus left
hc keybind $Mod-j             focus down
hc keybind $Mod-k             focus up
hc keybind $Mod-l             focus right

# moving clients
hc keybind $Mod-Shift-Left    shift left
hc keybind $Mod-Shift-Down    shift down
hc keybind $Mod-Shift-Up      shift up
hc keybind $Mod-Shift-Right   shift right
hc keybind $Mod-Shift-h       shift left
hc keybind $Mod-Shift-j       shift down
hc keybind $Mod-Shift-k       shift up
hc keybind $Mod-Shift-l       shift right

# splitting frames
hc keybind $Mod-u             split  bottom  0.5
hc keybind $Mod-o             split  right   0.5
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h      resize left +$resizestep
hc keybind $Mod-Control-j      resize down +$resizestep
hc keybind $Mod-Control-k      resize up +$resizestep
hc keybind $Mod-Control-l      resize right +$resizestep
hc keybind $Mod-Control-Left   resize left +$resizestep
hc keybind $Mod-Control-Down   resize down +$resizestep
hc keybind $Mod-Control-Up     resize up +$resizestep
hc keybind $Mod-Control-Right  resize right +$resizestep

# tags
# tag_names=("一" "二" "三" "四" "五" "六" "七" "八")
tag_names=("www" "dev" "chat" "mus" "doc" "sys" "idk" "game")
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 0
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_padding 0

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set default_frame_layout 2

hc set window_gap 8
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 1
hc set focus_crosses_monitor_boundaries 1
hc set swap_monitors_to_get_tag 1
hc set focus_follows_mouse 0

# rules
hc unrule -F
hc rule class=Brave-browser tag=www
hc rule class=VSCodium tag=dev
hc rule class=discord tag=chat
hc rule class=TelegramDesktop tag=chat
hc rule class=Ferdi tag=chat
hc rule class=Steam tag=game
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class~'[Pp]olybar' manage=off

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1920x1060+0+20 1920x1060+1920+20
# or simply:
hc detect_monitors
hc pad 0 20 0 0 0
hc pad 1 20 0 0 0

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" $monitor &
done
